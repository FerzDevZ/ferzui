// ferzui Design System - Grid System
// Modern CSS Grid and Flexbox based layout system

// =============================================================================
// CONTAINER SYSTEM
// =============================================================================

.container {
  @include make-container;
  @include make-container-max-widths;
}

.container-fluid {
  @include make-container;
}

.container-sm {
  @include make-container;
  max-width: map-get($container-max-widths, sm);
}

.container-md {
  @include make-container;
  max-width: map-get($container-max-widths, md);
}

.container-lg {
  @include make-container;
  max-width: map-get($container-max-widths, lg);
}

.container-xl {
  @include make-container;
  max-width: map-get($container-max-widths, xl);
}

.container-2xl {
  @include make-container;
  max-width: map-get($container-max-widths, 2xl);
}

// Narrow and wide containers
.container-narrow {
  @include make-container;
  max-width: 42rem; // 672px
}

.container-wide {
  @include make-container;
  max-width: 80rem; // 1280px
}

// =============================================================================
// FLEXBOX GRID SYSTEM
// =============================================================================

.row {
  @include make-row;
}

.col {
  @include make-col;
}

.col-auto {
  flex: 0 0 auto;
  width: auto;
  padding-left: calc(#{spacing(3)} * 0.5);
  padding-right: calc(#{spacing(3)} * 0.5);
}

// Column sizes (1-12)
@for $i from 1 through 12 {
  .col-#{$i} {
    @include make-col-size($i);
  }
}

// Responsive column sizes
@each $breakpoint, $value in $breakpoints {
  @if $breakpoint != xs {
    @include media-breakpoint-up($breakpoint) {
      .#{escape-class-name($breakpoint)}\:col {
        @include make-col;
      }
      
      .#{escape-class-name($breakpoint)}\:col-auto {
        flex: 0 0 auto;
        width: auto;
      }
      
      @for $i from 1 through 12 {
        .#{escape-class-name($breakpoint)}\:col-#{$i} {
          @include make-col-size($i);
        }
      }
    }
  }
}

// =============================================================================
// CSS GRID SYSTEM
// =============================================================================

.grid {
  display: grid;
  gap: spacing(4);
}

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }
.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }

// Grid column spans
.col-span-1 { grid-column: span 1 / span 1; }
.col-span-2 { grid-column: span 2 / span 2; }
.col-span-3 { grid-column: span 3 / span 3; }
.col-span-4 { grid-column: span 4 / span 4; }
.col-span-5 { grid-column: span 5 / span 5; }
.col-span-6 { grid-column: span 6 / span 6; }
.col-span-full { grid-column: 1 / -1; }

// Grid row spans
.row-span-1 { grid-row: span 1 / span 1; }
.row-span-2 { grid-row: span 2 / span 2; }
.row-span-3 { grid-row: span 3 / span 3; }
.row-span-4 { grid-row: span 4 / span 4; }
.row-span-5 { grid-row: span 5 / span 5; }
.row-span-6 { grid-row: span 6 / span 6; }
.row-span-full { grid-row: 1 / -1; }

// Grid gaps
.gap-0 { gap: 0; }
.gap-1 { gap: spacing(1); }
.gap-2 { gap: spacing(2); }
.gap-3 { gap: spacing(3); }
.gap-4 { gap: spacing(4); }
.gap-5 { gap: spacing(5); }
.gap-6 { gap: spacing(6); }
.gap-8 { gap: spacing(8); }
.gap-10 { gap: spacing(10); }
.gap-12 { gap: spacing(12); }

// Responsive grid
@each $breakpoint, $value in $breakpoints {
  @if $breakpoint != xs {
    @include media-breakpoint-up($breakpoint) {
      .#{escape-class-name($breakpoint)}\:grid { display: grid; }
      .#{escape-class-name($breakpoint)}\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
      .#{escape-class-name($breakpoint)}\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
      .#{escape-class-name($breakpoint)}\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
      .#{escape-class-name($breakpoint)}\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
      .#{escape-class-name($breakpoint)}\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }
      .#{escape-class-name($breakpoint)}\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
      .#{escape-class-name($breakpoint)}\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }
      
      .#{escape-class-name($breakpoint)}\:col-span-1 { grid-column: span 1 / span 1; }
      .#{escape-class-name($breakpoint)}\:col-span-2 { grid-column: span 2 / span 2; }
      .#{escape-class-name($breakpoint)}\:col-span-3 { grid-column: span 3 / span 3; }
      .#{escape-class-name($breakpoint)}\:col-span-4 { grid-column: span 4 / span 4; }
      .#{escape-class-name($breakpoint)}\:col-span-5 { grid-column: span 5 / span 5; }
      .#{escape-class-name($breakpoint)}\:col-span-6 { grid-column: span 6 / span 6; }
      .#{escape-class-name($breakpoint)}\:col-span-full { grid-column: 1 / -1; }
      
      .#{escape-class-name($breakpoint)}\:gap-0 { gap: 0; }
      .#{escape-class-name($breakpoint)}\:gap-1 { gap: spacing(1); }
      .#{escape-class-name($breakpoint)}\:gap-2 { gap: spacing(2); }
      .#{escape-class-name($breakpoint)}\:gap-3 { gap: spacing(3); }
      .#{escape-class-name($breakpoint)}\:gap-4 { gap: spacing(4); }
      .#{escape-class-name($breakpoint)}\:gap-5 { gap: spacing(5); }
      .#{escape-class-name($breakpoint)}\:gap-6 { gap: spacing(6); }
      .#{escape-class-name($breakpoint)}\:gap-8 { gap: spacing(8); }
      .#{escape-class-name($breakpoint)}\:gap-10 { gap: spacing(10); }
      .#{escape-class-name($breakpoint)}\:gap-12 { gap: spacing(12); }
    }
  }
}

// =============================================================================
// FLEXBOX UTILITIES
// =============================================================================

.flex { display: flex; }
.inline-flex { display: inline-flex; }

.flex-row { flex-direction: row; }
.flex-row-reverse { flex-direction: row-reverse; }
.flex-col { flex-direction: column; }
.flex-col-reverse { flex-direction: column-reverse; }

.flex-wrap { flex-wrap: wrap; }
.flex-wrap-reverse { flex-wrap: wrap-reverse; }
.flex-nowrap { flex-wrap: nowrap; }

.items-start { align-items: flex-start; }
.items-end { align-items: flex-end; }
.items-center { align-items: center; }
.items-baseline { align-items: baseline; }
.items-stretch { align-items: stretch; }

.justify-start { justify-content: flex-start; }
.justify-end { justify-content: flex-end; }
.justify-center { justify-content: center; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }
.justify-evenly { justify-content: space-evenly; }

.flex-1 { flex: 1 1 0%; }
.flex-auto { flex: 1 1 auto; }
.flex-initial { flex: 0 1 auto; }
.flex-none { flex: none; }

.flex-grow { flex-grow: 1; }
.flex-grow-0 { flex-grow: 0; }

.flex-shrink { flex-shrink: 1; }
.flex-shrink-0 { flex-shrink: 0; }

// Responsive flex utilities
@each $breakpoint, $value in $breakpoints {
  @if $breakpoint != xs {
    @include media-breakpoint-up($breakpoint) {
      .#{escape-class-name($breakpoint)}\:flex { display: flex; }
      .#{escape-class-name($breakpoint)}\:inline-flex { display: inline-flex; }
      .#{escape-class-name($breakpoint)}\:flex-row { flex-direction: row; }
      .#{escape-class-name($breakpoint)}\:flex-col { flex-direction: column; }
      .#{escape-class-name($breakpoint)}\:flex-wrap { flex-wrap: wrap; }
      .#{escape-class-name($breakpoint)}\:flex-nowrap { flex-wrap: nowrap; }
      .#{escape-class-name($breakpoint)}\:items-start { align-items: flex-start; }
      .#{escape-class-name($breakpoint)}\:items-end { align-items: flex-end; }
      .#{escape-class-name($breakpoint)}\:items-center { align-items: center; }
      .#{escape-class-name($breakpoint)}\:items-baseline { align-items: baseline; }
      .#{escape-class-name($breakpoint)}\:items-stretch { align-items: stretch; }
      .#{escape-class-name($breakpoint)}\:justify-start { justify-content: flex-start; }
      .#{escape-class-name($breakpoint)}\:justify-end { justify-content: flex-end; }
      .#{escape-class-name($breakpoint)}\:justify-center { justify-content: center; }
      .#{escape-class-name($breakpoint)}\:justify-between { justify-content: space-between; }
      .#{escape-class-name($breakpoint)}\:justify-around { justify-content: space-around; }
      .#{escape-class-name($breakpoint)}\:justify-evenly { justify-content: space-evenly; }
      .#{escape-class-name($breakpoint)}\:flex-1 { flex: 1 1 0%; }
      .#{escape-class-name($breakpoint)}\:flex-auto { flex: 1 1 auto; }
      .#{escape-class-name($breakpoint)}\:flex-initial { flex: 0 1 auto; }
      .#{escape-class-name($breakpoint)}\:flex-none { flex: none; }
    }
  }
}

// =============================================================================
// ASPECT RATIO UTILITIES
// =============================================================================

.aspect-square { @include aspect-ratio(1, 1); }
.aspect-video { @include aspect-ratio(16, 9); }
.aspect-4-3 { @include aspect-ratio(4, 3); }
.aspect-3-2 { @include aspect-ratio(3, 2); }
.aspect-2-1 { @include aspect-ratio(2, 1); }
.aspect-1-1 { @include aspect-ratio(1, 1); }

// =============================================================================
// OBJECT FIT UTILITIES
// =============================================================================

.object-contain { object-fit: contain; }
.object-cover { object-fit: cover; }
.object-fill { object-fit: fill; }
.object-none { object-fit: none; }
.object-scale-down { object-fit: scale-down; }

.object-bottom { object-position: bottom; }
.object-center { object-position: center; }
.object-left { object-position: left; }
.object-left-bottom { object-position: left bottom; }
.object-left-top { object-position: left top; }
.object-right { object-position: right; }
.object-right-bottom { object-position: right bottom; }
.object-right-top { object-position: right top; }
.object-top { object-position: top; }

// =============================================================================
// POSITION UTILITIES
// =============================================================================

.static { position: static; }
.fixed { position: fixed; }
.absolute { position: absolute; }
.relative { position: relative; }
.sticky { position: sticky; }

.inset-0 { top: 0; right: 0; bottom: 0; left: 0; }
.inset-auto { top: auto; right: auto; bottom: auto; left: auto; }

.top-0 { top: 0; }
.right-0 { right: 0; }
.bottom-0 { bottom: 0; }
.left-0 { left: 0; }

.top-auto { top: auto; }
.right-auto { right: auto; }
.bottom-auto { bottom: auto; }
.left-auto { left: auto; }

// Z-index utilities
.z-0 { z-index: 0; }
.z-10 { z-index: 10; }
.z-20 { z-index: 20; }
.z-30 { z-index: 30; }
.z-40 { z-index: 40; }
.z-50 { z-index: 50; }
.z-auto { z-index: auto; }

// =============================================================================
// DISPLAY UTILITIES
// =============================================================================

.block { display: block; }
.inline-block { display: inline-block; }
.inline { display: inline; }
.flex { display: flex; }
.inline-flex { display: inline-flex; }
.grid { display: grid; }
.inline-grid { display: inline-grid; }
.hidden { display: none; }

// Responsive display utilities
@each $breakpoint, $value in $breakpoints {
  @if $breakpoint != xs {
    @include media-breakpoint-up($breakpoint) {
      .#{escape-class-name($breakpoint)}\:block { display: block; }
      .#{escape-class-name($breakpoint)}\:inline-block { display: inline-block; }
      .#{escape-class-name($breakpoint)}\:inline { display: inline; }
      .#{escape-class-name($breakpoint)}\:flex { display: flex; }
      .#{escape-class-name($breakpoint)}\:inline-flex { display: inline-flex; }
      .#{escape-class-name($breakpoint)}\:grid { display: grid; }
      .#{escape-class-name($breakpoint)}\:inline-grid { display: inline-grid; }
      .#{escape-class-name($breakpoint)}\:hidden { display: none; }
    }
  }
}

// =============================================================================
// OVERFLOW UTILITIES
// =============================================================================

.overflow-auto { overflow: auto; }
.overflow-hidden { overflow: hidden; }
.overflow-clip { overflow: clip; }
.overflow-visible { overflow: visible; }
.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }
.overflow-y-auto { overflow-y: auto; }
.overflow-x-hidden { overflow-x: hidden; }
.overflow-y-hidden { overflow-y: hidden; }
.overflow-x-clip { overflow-x: clip; }
.overflow-y-clip { overflow-y: clip; }
.overflow-x-visible { overflow-x: visible; }
.overflow-y-visible { overflow-y: visible; }
.overflow-x-scroll { overflow-x: scroll; }
.overflow-y-scroll { overflow-y: scroll; }
